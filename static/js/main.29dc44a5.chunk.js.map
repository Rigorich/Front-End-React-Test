{"version":3,"sources":["RepositoryElement.js","Pagination.js","AccountPage.js","InitialPage.js","NotFoundPage.js","MainPage.js","reportWebVitals.js","index.js"],"names":["RepositoryElement","RepositoryObject","className","href","html_url","target","rel","name","description","Pagination","TotalPages","PageNumber","setPageNumber","style","width","Math","min","minWidth","GenerateNumberButton","num","onClick","LeftArrow","console","log","max","RightArrow","LeftDots","RightDots","buttons","push","i","GenerateButtons","AccountPage","UserData","useState","undefined","Repositories","setRepositories","FetchAllRepositories","DownloadableRepos","rep_count","public_repos","LoadPageAndCheckForAnotherOne","ceil","fetch","repos_url","UrlOfPageN","then","response","status","json","data","concat","useEffect","backgroundImage","avatar_url","login","length","page","count","left_bound","slice","map","rep","full_name","GenerateRepositoryElements","InitialPage","NotFoundPage","MainPage","CurrentUserData","setCurrentUserData","document","title","type","onKeyPress","event","key","q","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29dc44a5.chunk.js","sourcesContent":["import './RepositoryElement.css';\r\n\r\nimport React from 'react';\r\n\r\nfunction RepositoryElement({RepositoryObject}) {\r\n  return (\r\n    <div className=\"RepositoryElement\">\r\n      <div className=\"RepositoryElementContent\">\r\n        <a \r\n            className=\"RepositoryName\"\r\n            href={RepositoryObject.html_url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer nofollow\"\r\n        >\r\n          {RepositoryObject.name}\r\n        </a>\r\n        <div className=\"RepositoryDescription\">\r\n          {RepositoryObject.description}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepositoryElement;\r\n","import './Pagination.css';\r\n\r\nimport React from 'react';\r\n\r\nfunction Pagination({ TotalPages, PageNumber, setPageNumber }) {\r\n\r\n  if (TotalPages < 2) return null;\r\n\r\n  const GenerateButtons = () => {\r\n\r\n    const GenerateNumberButton = (num) => { return (\r\n      <button \r\n        key={num} \r\n        className={\"DefaultButton PageButton\" + (num === PageNumber ? \" CurrentPageButton\" : \"\")}\r\n        onClick={() => setPageNumber(num)}\r\n      >\r\n        { num }\r\n      </button>\r\n    )};\r\n\r\n    const LeftArrow = (\r\n      <button \r\n        key={\"<\"} \r\n        className={\"DefaultButton ArrowButton\" + (PageNumber === 1 ? \" ArrowButtonDisabled\" : \"\")}\r\n        onClick={() => {console.log(PageNumber); setPageNumber(Math.max(PageNumber-1, 1));}}\r\n      >\r\n        {\"<\"}\r\n      </button>\r\n    );\r\n\r\n    const RightArrow = (    \r\n      <button \r\n        key={\">\"} \r\n        className={\"DefaultButton ArrowButton\" + (PageNumber === TotalPages ? \" ArrowButtonDisabled\" : \"\")}\r\n        onClick={() => setPageNumber(Math.min(PageNumber+1, TotalPages))}\r\n      >\r\n        {\">\"}\r\n      </button>\r\n    );\r\n\r\n    const LeftDots = (     \r\n      <button \r\n        key={\"LeftDots\"} \r\n        className={\"DefaultButton DotsButton\"}\r\n      >\r\n        {\"…\"}\r\n      </button>\r\n    );\r\n\r\n    const RightDots = (     \r\n      <button \r\n        key={\"RightDots\"} \r\n        className={\"DefaultButton DotsButton\"}\r\n      >\r\n        {\"…\"}\r\n      </button>\r\n    );\r\n    \r\n    let buttons = [];\r\n\r\n    buttons.push(LeftArrow);\r\n    \r\n    if (TotalPages <= 5) {\r\n      for (let i = 1; i <= TotalPages; i++)\r\n        buttons.push(GenerateNumberButton(i));\r\n    } else {\r\n      buttons.push(GenerateNumberButton(1));\r\n      if (PageNumber <= 3) {\r\n        buttons.push(GenerateNumberButton(2));\r\n        buttons.push(GenerateNumberButton(3));\r\n      } else {\r\n        buttons.push(LeftDots);\r\n      }\r\n      if (PageNumber >= TotalPages - 2) {\r\n        buttons.push(GenerateNumberButton(TotalPages-2));\r\n        buttons.push(GenerateNumberButton(TotalPages-1));\r\n      } else {\r\n        if (PageNumber > 3)\r\n          buttons.push(GenerateNumberButton(PageNumber));\r\n        buttons.push(RightDots);\r\n      }\r\n      buttons.push(GenerateNumberButton(TotalPages));\r\n    }\r\n    \r\n    buttons.push(RightArrow);\r\n\r\n    return buttons;\r\n  };\r\n  \r\n  return (\r\n      <div \r\n        className=\"Pagination\"\r\n        style={{ \r\n          width: 25/7*(Math.min(5,TotalPages)+2)+\"%\",\r\n          minWidth: 300/7*(Math.min(5,TotalPages)+2)+\"px\"\r\n        }}\r\n      >\r\n        {GenerateButtons()}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import './AccountPage.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport RepositoryElement from './RepositoryElement';\r\nimport Pagination from './Pagination';\r\n\r\nfunction AccountPage({ UserData }) {\r\n  \r\n  const [Repositories, setRepositories] = useState(undefined);\r\n  const [PageNumber, setPageNumber] = useState(1);\r\n  const RepsPerPage = 4;\r\n\r\n  const FetchAllRepositories = () => {\r\n\r\n    let DownloadableRepos = [];\r\n\r\n    const rep_count = +UserData.public_repos;\r\n\r\n    const UrlOfPageN = (num) => \r\n      UserData.repos_url+\"?per_page=100&page=\"+num;\r\n\r\n    const LoadPageAndCheckForAnotherOne = (num) => {\r\n      if (num > Math.ceil(rep_count/100)) {\r\n        setRepositories(DownloadableRepos);\r\n        return;\r\n      };\r\n      fetch(\r\n        UrlOfPageN(num))\r\n        .then((response) => {\r\n          if (response.status === 404) return null;\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          if (!data) {\r\n            setRepositories(null);\r\n            return;\r\n          }\r\n          DownloadableRepos = DownloadableRepos.concat(data);\r\n          //setRepositories(DownloadableRepos);\r\n          console.log(DownloadableRepos);\r\n          LoadPageAndCheckForAnotherOne(num + 1)\r\n        });\r\n    };\r\n\r\n    LoadPageAndCheckForAnotherOne(1);\r\n    setPageNumber(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRepositories(null);\r\n    FetchAllRepositories();\r\n  }, [UserData]);\r\n\r\n  const GenerateRepositoryElements = (page, count) => {\r\n    const left_bound = (page - 1) * count;\r\n    const reps = Repositories.slice(left_bound, left_bound + count);\r\n    const rep_elems = reps.map((rep) => \r\n      <RepositoryElement \r\n        RepositoryObject={rep}\r\n        key={rep.full_name}\r\n      >\r\n      </RepositoryElement>\r\n    );\r\n    return rep_elems;\r\n  };\r\n\r\n\r\n  return (\r\n      <div className=\"AccountPage\">\r\n        <div className=\"AccountProfileInfo\">\r\n          <div \r\n            className=\"AccountAvatar\"\r\n            style={{ \r\n              backgroundImage: `url(\"${UserData.avatar_url}\")` \r\n            }}\r\n          >\r\n          </div>\r\n          <div className=\"AccountName\">\r\n            {UserData.name}\r\n          </div>\r\n          <a \r\n            className=\"AccountNickname\"\r\n            href={UserData.html_url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer nofollow\"\r\n          >\r\n            {UserData.login}\r\n          </a>\r\n          <div className=\"AccountFollows\">\r\n            \r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"RepositoriesAndPagination\">\r\n          <div className=\"RepositoriesLabel\">Repositories: {UserData.public_repos}</div>\r\n          <div className=\"Repositories\">\r\n            {\r\n            Repositories ? ( \r\n              Repositories.length ?\r\n              GenerateRepositoryElements(PageNumber, RepsPerPage) :\r\n              <div className=\"UserNoRepositories\"></div>\r\n            ) : \r\n            <div className=\"AwaitingRepositories\"></div>\r\n            }\r\n          </div>\r\n          { Repositories && Repositories.length ?\r\n            <Pagination \r\n              TotalPages={Math.ceil(Repositories.length/RepsPerPage)}\r\n              PageNumber={PageNumber}\r\n              setPageNumber={setPageNumber}\r\n            >\r\n            </Pagination> \r\n          : null }\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AccountPage;\r\n","import './InitialPage.css';\r\n\r\nimport React from 'react';\r\n\r\nfunction InitialPage() {\r\n  return (\r\n      <div className=\"InitialPage\"></div>\r\n  );\r\n}\r\n\r\nexport default InitialPage;\r\n","import './NotFoundPage.css';\r\n\r\nimport React from 'react';\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n      <div className=\"NotFoundPage\"></div>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import './MainPage.css';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport AccountPage from './AccountPage';\r\nimport InitialPage from './InitialPage';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nfunction MainPage() {\r\n  const [CurrentUserData, setCurrentUserData] = useState();\r\n\r\n  useEffect(() => {\r\n    if (CurrentUserData)\r\n      document.title = CurrentUserData.login + \" | GitHub\";\r\n    else  \r\n      document.title = \"Rigorich React Test\";\r\n  }, [CurrentUserData]);\r\n\r\n  return (\r\n    <div className=\"MainPage\">\r\n      <header className=\"Header\">\r\n        <div className=\"MainLogo\"> </div>\r\n        <input className=\"SearchUserForm\" \r\n          type=\"text\" \r\n          onKeyPress={\r\n            (event) => {\r\n              if (event.key === 'Enter')\r\n              {\r\n                const q = event.target.value;\r\n                if (!q) {\r\n                  setCurrentUserData(undefined);\r\n                  return;\r\n                }\r\n                fetch(\r\n                  `https://api.github.com/users/${q}`)\r\n                  .then((response) => {\r\n                    if (response.status === 404) return null;\r\n                    if (response.status === 403) return null;\r\n                    return response.json();\r\n                  })\r\n                  .then((data) => {\r\n                    setCurrentUserData(data);\r\n                  });\r\n              }\r\n            }\r\n          }\r\n        />\r\n      </header>\r\n      <div className=\"PageContent\">\r\n          {CurrentUserData ?\r\n          <AccountPage UserData={CurrentUserData}></AccountPage> :\r\n          (CurrentUserData === null ?\r\n            <NotFoundPage></NotFoundPage> :\r\n            <InitialPage></InitialPage>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainPage from './MainPage';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}